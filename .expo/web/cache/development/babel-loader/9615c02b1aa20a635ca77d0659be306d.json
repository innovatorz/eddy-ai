{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/jamesdelacruz/EDI/eddy-ai/Photo.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { FaceDetector } from \"expo\";\nimport { Ionicons } from \"@expo/vector-icons\";\nvar pictureSize = 150;\n\nvar Photo = function (_React$Component) {\n  _inherits(Photo, _React$Component);\n\n  var _super = _createSuper(Photo);\n\n  function Photo() {\n    var _this;\n\n    _classCallCheck(this, Photo);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      selected: false,\n      faces: [],\n      image: null\n    };\n    _this._mounted = false;\n\n    _this.toggleSelection = function () {\n      _this.setState({\n        selected: !_this.state.selected\n      }, function () {\n        return _this.props.onSelectionToggle(_this.props.uri, _this.state.selected);\n      });\n    };\n\n    _this.detectFace = function () {\n      return FaceDetector.detectFacesAsync(_this.props.uri, {\n        detectLandmarks: FaceDetector.Constants.Landmarks.none,\n        runClassifications: FaceDetector.Constants.Classifications.all\n      }).then(_this.facesDetected).catch(_this.handleFaceDetectionError);\n    };\n\n    _this.facesDetected = function (_ref) {\n      var image = _ref.image,\n          faces = _ref.faces;\n\n      _this.setState({\n        faces: faces,\n        image: image\n      });\n    };\n\n    _this.getImageDimensions = function (_ref2) {\n      var width = _ref2.width,\n          height = _ref2.height;\n\n      if (width > height) {\n        var scaledHeight = pictureSize * height / width;\n        return {\n          width: pictureSize,\n          height: scaledHeight,\n          scaleX: pictureSize / width,\n          scaleY: scaledHeight / height,\n          offsetX: 0,\n          offsetY: (pictureSize - scaledHeight) / 2\n        };\n      } else {\n        var scaledWidth = pictureSize * width / height;\n        return {\n          width: scaledWidth,\n          height: pictureSize,\n          scaleX: scaledWidth / width,\n          scaleY: pictureSize / height,\n          offsetX: (pictureSize - scaledWidth) / 2,\n          offsetY: 0\n        };\n      }\n    };\n\n    _this.handleFaceDetectionError = function (error) {\n      return console.warn(error);\n    };\n\n    _this.renderFaces = function () {\n      return _this.state.image && _this.state.faces && _this.state.faces.map(_this.renderFace);\n    };\n\n    _this.renderFace = function (face, index) {\n      var image = _this.state.image;\n\n      var _this$getImageDimensi = _this.getImageDimensions(image),\n          scaleX = _this$getImageDimensi.scaleX,\n          scaleY = _this$getImageDimensi.scaleY,\n          offsetX = _this$getImageDimensi.offsetX,\n          offsetY = _this$getImageDimensi.offsetY;\n\n      var layout = {\n        top: offsetY + face.bounds.origin.y * scaleY,\n        left: offsetX + face.bounds.origin.x * scaleX,\n        width: face.bounds.size.width * scaleX,\n        height: face.bounds.size.height * scaleY\n      };\n      return React.createElement(View, {\n        key: index,\n        style: [styles.face, layout],\n        transform: [{\n          perspective: 600\n        }, {\n          rotateZ: (face.rollAngle || 0).toFixed(0) + \"deg\"\n        }, {\n          rotateY: (face.yawAngle || 0).toFixed(0) + \"deg\"\n        }],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.faceText,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }\n      }, \"\\uD83D\\uDE01 \", (face.smilingProbability * 100).toFixed(0), \"%\"));\n    };\n\n    return _this;\n  }\n\n  _createClass(Photo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._mounted = true;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._mounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var uri = this.props.uri;\n      return React.createElement(TouchableOpacity, {\n        style: styles.pictureWrapper,\n        onLongPress: this.detectFace,\n        onPress: this.toggleSelection,\n        activeOpacity: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 7\n        }\n      }, React.createElement(Image, {\n        style: styles.picture,\n        source: {\n          uri: uri\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }\n      }), this.state.selected && React.createElement(Ionicons, {\n        name: \"md-checkmark-circle\",\n        size: 30,\n        color: \"#4630EB\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }\n      }), React.createElement(View, {\n        style: styles.facesContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }\n      }, this.renderFaces()));\n    }\n  }]);\n\n  return Photo;\n}(React.Component);\n\nexport { Photo as default };\nvar styles = StyleSheet.create({\n  picture: {\n    position: \"absolute\",\n    bottom: 0,\n    right: 0,\n    left: 0,\n    top: 0,\n    resizeMode: \"contain\"\n  },\n  pictureWrapper: {\n    width: pictureSize,\n    height: pictureSize,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    margin: 5\n  },\n  facesContainer: {\n    position: \"absolute\",\n    bottom: 0,\n    right: 0,\n    left: 0,\n    top: 0\n  },\n  face: {\n    borderWidth: 2,\n    borderRadius: 2,\n    position: \"absolute\",\n    borderColor: \"#FFD700\",\n    justifyContent: \"center\",\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\"\n  },\n  faceText: {\n    color: \"#FFD700\",\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    margin: 2,\n    fontSize: 10,\n    backgroundColor: \"transparent\"\n  }\n});","map":{"version":3,"sources":["/Users/jamesdelacruz/EDI/eddy-ai/Photo.js"],"names":["React","FaceDetector","Ionicons","pictureSize","Photo","state","selected","faces","image","_mounted","toggleSelection","setState","props","onSelectionToggle","uri","detectFace","detectFacesAsync","detectLandmarks","Constants","Landmarks","none","runClassifications","Classifications","all","then","facesDetected","catch","handleFaceDetectionError","getImageDimensions","width","height","scaledHeight","scaleX","scaleY","offsetX","offsetY","scaledWidth","error","console","warn","renderFaces","map","renderFace","face","index","layout","top","bounds","origin","y","left","x","size","styles","perspective","rotateZ","rollAngle","toFixed","rotateY","yawAngle","faceText","smilingProbability","pictureWrapper","picture","facesContainer","Component","StyleSheet","create","position","bottom","right","resizeMode","alignItems","justifyContent","margin","borderWidth","borderRadius","borderColor","backgroundColor","color","fontWeight","textAlign","fontSize"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Image, StyleSheet, View, TouchableOpacity, Text } from \"react-native\";\nimport { FaceDetector } from \"expo\";\nimport { Ionicons } from \"@expo/vector-icons\";\n\nconst pictureSize = 150;\n\nexport default class Photo extends React.Component {\n  state = {\n    selected: false,\n    faces: [],\n    image: null,\n  };\n  _mounted = false;\n\n  componentDidMount() {\n    this._mounted = true;\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n  }\n\n  toggleSelection = () => {\n    this.setState({ selected: !this.state.selected }, () =>\n      this.props.onSelectionToggle(this.props.uri, this.state.selected)\n    );\n  };\n\n  detectFace = () =>\n    FaceDetector.detectFacesAsync(this.props.uri, {\n      detectLandmarks: FaceDetector.Constants.Landmarks.none,\n      runClassifications: FaceDetector.Constants.Classifications.all,\n    })\n      .then(this.facesDetected)\n      .catch(this.handleFaceDetectionError);\n\n  facesDetected = ({ image, faces }) => {\n    this.setState({\n      faces,\n      image,\n    });\n  };\n\n  getImageDimensions = ({ width, height }) => {\n    if (width > height) {\n      const scaledHeight = (pictureSize * height) / width;\n      return {\n        width: pictureSize,\n        height: scaledHeight,\n\n        scaleX: pictureSize / width,\n        scaleY: scaledHeight / height,\n\n        offsetX: 0,\n        offsetY: (pictureSize - scaledHeight) / 2,\n      };\n    } else {\n      const scaledWidth = (pictureSize * width) / height;\n      return {\n        width: scaledWidth,\n        height: pictureSize,\n\n        scaleX: scaledWidth / width,\n        scaleY: pictureSize / height,\n\n        offsetX: (pictureSize - scaledWidth) / 2,\n        offsetY: 0,\n      };\n    }\n  };\n\n  handleFaceDetectionError = (error) => console.warn(error);\n\n  renderFaces = () =>\n    this.state.image &&\n    this.state.faces &&\n    this.state.faces.map(this.renderFace);\n\n  renderFace = (face, index) => {\n    const { image } = this.state;\n    const { scaleX, scaleY, offsetX, offsetY } = this.getImageDimensions(image);\n    const layout = {\n      top: offsetY + face.bounds.origin.y * scaleY,\n      left: offsetX + face.bounds.origin.x * scaleX,\n      width: face.bounds.size.width * scaleX,\n      height: face.bounds.size.height * scaleY,\n    };\n\n    return (\n      <View\n        key={index}\n        style={[styles.face, layout]}\n        transform={[\n          { perspective: 600 },\n          { rotateZ: `${(face.rollAngle || 0).toFixed(0)}deg` },\n          { rotateY: `${(face.yawAngle || 0).toFixed(0)}deg` },\n        ]}\n      >\n        <Text style={styles.faceText}>\n          😁 {(face.smilingProbability * 100).toFixed(0)}%\n        </Text>\n      </View>\n    );\n  };\n\n  render() {\n    const { uri } = this.props;\n    return (\n      <TouchableOpacity\n        style={styles.pictureWrapper}\n        onLongPress={this.detectFace}\n        onPress={this.toggleSelection}\n        activeOpacity={1}\n      >\n        <Image style={styles.picture} source={{ uri }} />\n        {this.state.selected && (\n          <Ionicons name=\"md-checkmark-circle\" size={30} color=\"#4630EB\" />\n        )}\n        <View style={styles.facesContainer}>{this.renderFaces()}</View>\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  picture: {\n    position: \"absolute\",\n    bottom: 0,\n    right: 0,\n    left: 0,\n    top: 0,\n    resizeMode: \"contain\",\n  },\n  pictureWrapper: {\n    width: pictureSize,\n    height: pictureSize,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    margin: 5,\n  },\n  facesContainer: {\n    position: \"absolute\",\n    bottom: 0,\n    right: 0,\n    left: 0,\n    top: 0,\n  },\n  face: {\n    borderWidth: 2,\n    borderRadius: 2,\n    position: \"absolute\",\n    borderColor: \"#FFD700\",\n    justifyContent: \"center\",\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n  },\n  faceText: {\n    color: \"#FFD700\",\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    margin: 2,\n    fontSize: 10,\n    backgroundColor: \"transparent\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}