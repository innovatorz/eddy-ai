{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/jamesdelacruz/EDI/eddy-ai/GalleryScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { FileSystem, MediaLibrary, Permissions } from \"expo\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport Photo from \"./Photo\";\nvar PHOTOS_DIR = FileSystem.documentDirectory + \"photos\";\n\nvar GalleryScreen = function (_React$Component) {\n  _inherits(GalleryScreen, _React$Component);\n\n  var _super = _createSuper(GalleryScreen);\n\n  function GalleryScreen() {\n    var _this;\n\n    _classCallCheck(this, GalleryScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      faces: {},\n      images: {},\n      photos: [],\n      selected: []\n    };\n\n    _this.componentDidMount = function _callee() {\n      var photos;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(FileSystem.readDirectoryAsync(PHOTOS_DIR));\n\n            case 2:\n              photos = _context.sent;\n\n              _this.setState({\n                photos: photos\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.toggleSelection = function (uri, isSelected) {\n      var selected = _this.state.selected;\n\n      if (isSelected) {\n        selected.push(uri);\n      } else {\n        selected = selected.filter(function (item) {\n          return item !== uri;\n        });\n      }\n\n      _this.setState({\n        selected: selected\n      });\n    };\n\n    _this.saveToGallery = function _callee2() {\n      var photos, _await$Permissions$as, status, promises;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              photos = _this.state.selected;\n\n              if (!(photos.length > 0)) {\n                _context2.next = 14;\n                break;\n              }\n\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA_ROLL));\n\n            case 4:\n              _await$Permissions$as = _context2.sent;\n              status = _await$Permissions$as.status;\n\n              if (!(status !== \"granted\")) {\n                _context2.next = 8;\n                break;\n              }\n\n              throw new Error(\"Denied CAMERA_ROLL permissions!\");\n\n            case 8:\n              promises = photos.map(function (photoUri) {\n                return MediaLibrary.createAssetAsync(photoUri);\n              });\n              _context2.next = 11;\n              return _regeneratorRuntime.awrap(Promise.all(promises));\n\n            case 11:\n              alert(\"Successfully saved photos to user's gallery!\");\n              _context2.next = 15;\n              break;\n\n            case 14:\n              alert(\"No photos to save!\");\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.renderPhoto = function (fileName) {\n      return React.createElement(Photo, {\n        key: fileName,\n        uri: PHOTOS_DIR + \"/\" + fileName,\n        onSelectionToggle: _this.toggleSelection,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 5\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(GalleryScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.navbar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.button,\n        onPress: this.props.onPress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      }, React.createElement(MaterialIcons, {\n        name: \"arrow-back\",\n        size: 25,\n        color: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }\n      })), React.createElement(TouchableOpacity, {\n        style: styles.button,\n        onPress: this.saveToGallery,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.whiteText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }\n      }, \"Save selected to gallery\"))), React.createElement(ScrollView, {\n        contentComponentStyle: {\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.pictures,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }, this.state.photos.map(this.renderPhoto))));\n    }\n  }]);\n\n  return GalleryScreen;\n}(React.Component);\n\nexport { GalleryScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 20,\n    backgroundColor: \"white\"\n  },\n  navbar: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    backgroundColor: \"#4630EB\"\n  },\n  pictures: {\n    flex: 1,\n    flexWrap: \"wrap\",\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    paddingVertical: 8\n  },\n  button: {\n    padding: 20\n  },\n  whiteText: {\n    color: \"white\"\n  }\n});","map":{"version":3,"sources":["/Users/jamesdelacruz/EDI/eddy-ai/GalleryScreen.js"],"names":["React","FileSystem","MediaLibrary","Permissions","MaterialIcons","Photo","PHOTOS_DIR","documentDirectory","GalleryScreen","state","faces","images","photos","selected","componentDidMount","readDirectoryAsync","setState","toggleSelection","uri","isSelected","push","filter","item","saveToGallery","length","askAsync","CAMERA_ROLL","status","Error","promises","map","photoUri","createAssetAsync","Promise","all","alert","renderPhoto","fileName","styles","container","navbar","button","props","onPress","whiteText","flex","pictures","Component","StyleSheet","create","paddingTop","backgroundColor","flexDirection","alignItems","justifyContent","flexWrap","paddingVertical","padding","color"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;AASA,SAASC,UAAT,EAAqBC,YAArB,EAAmCC,WAAnC,QAAsD,MAAtD;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAOC,KAAP;AAEA,IAAMC,UAAU,GAAGL,UAAU,CAACM,iBAAX,GAA+B,QAAlD;;IAEqBC,a;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,MAAM,EAAE,EAFF;AAGNC,MAAAA,MAAM,EAAE,EAHF;AAINC,MAAAA,QAAQ,EAAE;AAJJ,K;;UAORC,iB,GAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACGb,UAAU,CAACc,kBAAX,CAA8BT,UAA9B,CADH;;AAAA;AACZM,cAAAA,MADY;;AAElB,oBAAKI,QAAL,CAAc;AAAEJ,gBAAAA,MAAM,EAANA;AAAF,eAAd;;AAFkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;UAKpBK,e,GAAkB,UAACC,GAAD,EAAMC,UAAN,EAAqB;AACrC,UAAIN,QAAQ,GAAG,MAAKJ,KAAL,CAAWI,QAA1B;;AACA,UAAIM,UAAJ,EAAgB;AACdN,QAAAA,QAAQ,CAACO,IAAT,CAAcF,GAAd;AACD,OAFD,MAEO;AACLL,QAAAA,QAAQ,GAAGA,QAAQ,CAACQ,MAAT,CAAgB,UAACC,IAAD;AAAA,iBAAUA,IAAI,KAAKJ,GAAnB;AAAA,SAAhB,CAAX;AACD;;AACD,YAAKF,QAAL,CAAc;AAAEH,QAAAA,QAAQ,EAARA;AAAF,OAAd;AACD,K;;UAEDU,a,GAAgB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACRX,cAAAA,MADQ,GACC,MAAKH,KAAL,CAAWI,QADZ;;AAAA,oBAGVD,MAAM,CAACY,MAAP,GAAgB,CAHN;AAAA;AAAA;AAAA;;AAAA;AAAA,+CAIarB,WAAW,CAACsB,QAAZ,CAAqBtB,WAAW,CAACuB,WAAjC,CAJb;;AAAA;AAAA;AAIJC,cAAAA,MAJI,yBAIJA,MAJI;;AAAA,oBAMRA,MAAM,KAAK,SANH;AAAA;AAAA;AAAA;;AAAA,oBAOJ,IAAIC,KAAJ,CAAU,iCAAV,CAPI;;AAAA;AAUNC,cAAAA,QAVM,GAUKjB,MAAM,CAACkB,GAAP,CAAW,UAACC,QAAD,EAAc;AACxC,uBAAO7B,YAAY,CAAC8B,gBAAb,CAA8BD,QAA9B,CAAP;AACD,eAFgB,CAVL;AAAA;AAAA,+CAcNE,OAAO,CAACC,GAAR,CAAYL,QAAZ,CAdM;;AAAA;AAeZM,cAAAA,KAAK,CAAC,8CAAD,CAAL;AAfY;AAAA;;AAAA;AAiBZA,cAAAA,KAAK,CAAC,oBAAD,CAAL;;AAjBY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;UAqBhBC,W,GAAc,UAACC,QAAD;AAAA,aACZ,oBAAC,KAAD;AACE,QAAA,GAAG,EAAEA,QADP;AAEE,QAAA,GAAG,EAAK/B,UAAL,SAAmB+B,QAFxB;AAGE,QAAA,iBAAiB,EAAE,MAAKpB,eAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADY;AAAA,K;;;;;;;WAQd,kBAAS;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEqB,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEF,MAAM,CAACG,MAAhC;AAAwC,QAAA,OAAO,EAAE,KAAKC,KAAL,CAAWC,OAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,aAAD;AAAe,QAAA,IAAI,EAAC,YAApB;AAAiC,QAAA,IAAI,EAAE,EAAvC;AAA2C,QAAA,KAAK,EAAC,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEL,MAAM,CAACG,MAAhC;AAAwC,QAAA,OAAO,EAAE,KAAKlB,aAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEe,MAAM,CAACM,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,CAJF,CADF,EASE,oBAAC,UAAD;AAAY,QAAA,qBAAqB,EAAE;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEP,MAAM,CAACQ,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKrC,KAAL,CAAWG,MAAX,CAAkBkB,GAAlB,CAAsB,KAAKM,WAA3B,CADH,CADF,CATF,CADF;AAiBD;;;;EAtEwCpC,KAAK,CAAC+C,S;;SAA5BvC,a;AAyErB,IAAM8B,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC/BV,EAAAA,SAAS,EAAE;AACTM,IAAAA,IAAI,EAAE,CADG;AAETK,IAAAA,UAAU,EAAE,EAFH;AAGTC,IAAAA,eAAe,EAAE;AAHR,GADoB;AAM/BX,EAAAA,MAAM,EAAE;AACNY,IAAAA,aAAa,EAAE,KADT;AAENC,IAAAA,UAAU,EAAE,QAFN;AAGNC,IAAAA,cAAc,EAAE,eAHV;AAINH,IAAAA,eAAe,EAAE;AAJX,GANuB;AAY/BL,EAAAA,QAAQ,EAAE;AACRD,IAAAA,IAAI,EAAE,CADE;AAERU,IAAAA,QAAQ,EAAE,MAFF;AAGRH,IAAAA,aAAa,EAAE,KAHP;AAIRE,IAAAA,cAAc,EAAE,cAJR;AAKRE,IAAAA,eAAe,EAAE;AALT,GAZqB;AAmB/Bf,EAAAA,MAAM,EAAE;AACNgB,IAAAA,OAAO,EAAE;AADH,GAnBuB;AAsB/Bb,EAAAA,SAAS,EAAE;AACTc,IAAAA,KAAK,EAAE;AADE;AAtBoB,CAAlB,CAAf","sourcesContent":["import React from \"react\";\nimport {\n  Image,\n  StyleSheet,\n  View,\n  TouchableOpacity,\n  Text,\n  ScrollView,\n} from \"react-native\";\nimport { FileSystem, MediaLibrary, Permissions } from \"expo\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport Photo from \"./Photo\";\n\nconst PHOTOS_DIR = FileSystem.documentDirectory + \"photos\";\n\nexport default class GalleryScreen extends React.Component {\n  state = {\n    faces: {},\n    images: {},\n    photos: [],\n    selected: [],\n  };\n\n  componentDidMount = async () => {\n    const photos = await FileSystem.readDirectoryAsync(PHOTOS_DIR);\n    this.setState({ photos });\n  };\n\n  toggleSelection = (uri, isSelected) => {\n    let selected = this.state.selected;\n    if (isSelected) {\n      selected.push(uri);\n    } else {\n      selected = selected.filter((item) => item !== uri);\n    }\n    this.setState({ selected });\n  };\n\n  saveToGallery = async () => {\n    const photos = this.state.selected;\n\n    if (photos.length > 0) {\n      const { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n\n      if (status !== \"granted\") {\n        throw new Error(\"Denied CAMERA_ROLL permissions!\");\n      }\n\n      const promises = photos.map((photoUri) => {\n        return MediaLibrary.createAssetAsync(photoUri);\n      });\n\n      await Promise.all(promises);\n      alert(\"Successfully saved photos to user's gallery!\");\n    } else {\n      alert(\"No photos to save!\");\n    }\n  };\n\n  renderPhoto = (fileName) => (\n    <Photo\n      key={fileName}\n      uri={`${PHOTOS_DIR}/${fileName}`}\n      onSelectionToggle={this.toggleSelection}\n    />\n  );\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <View style={styles.navbar}>\n          <TouchableOpacity style={styles.button} onPress={this.props.onPress}>\n            <MaterialIcons name=\"arrow-back\" size={25} color=\"white\" />\n          </TouchableOpacity>\n          <TouchableOpacity style={styles.button} onPress={this.saveToGallery}>\n            <Text style={styles.whiteText}>Save selected to gallery</Text>\n          </TouchableOpacity>\n        </View>\n        <ScrollView contentComponentStyle={{ flex: 1 }}>\n          <View style={styles.pictures}>\n            {this.state.photos.map(this.renderPhoto)}\n          </View>\n        </ScrollView>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 20,\n    backgroundColor: \"white\",\n  },\n  navbar: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    backgroundColor: \"#4630EB\",\n  },\n  pictures: {\n    flex: 1,\n    flexWrap: \"wrap\",\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    paddingVertical: 8,\n  },\n  button: {\n    padding: 20,\n  },\n  whiteText: {\n    color: \"white\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}